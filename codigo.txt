public void obtenerJsonProcesado() {
		String rutaDataPlantilla = "C:\\Platek\\Workspaces\\Barranquilla\\platek-transkal-frw\\src\\META-INF\\resources\\transkal\\frwWhatsApp\\plantillas\\dt-orden_de_carga.json";
		String rutaJsonPlantilla = "C:\\Platek\\Workspaces\\Barranquilla\\platek-transkal-frw\\src\\META-INF\\resources\\transkal\\frwWhatsApp\\plantillas\\pt-orden_de_carga.json";
		
		Map<String, String> dataMap = pasarDatosAMapa(rutaDataPlantilla);
		
		try {
			String jsonModificado = reemplazarVariablesPlantilla(rutaJsonPlantilla, dataMap);
			System.out.println("------------- AQUI EL JSON MODIFICADO ----------------");
			System.out.println(jsonModificado);
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	private Map<String, String> pasarDatosAMapa(String filePath) {
        // Crear un mapa para almacenar los datos
        Map<String, String> dataMap = new HashMap<>();
        try (FileReader reader = new FileReader(filePath)) {
            JsonObject jsonObject = new JsonParser().parse(reader).getAsJsonObject();
            for (Map.Entry<String, JsonElement> entry : jsonObject.entrySet()) {
                // Convertir los valores a String y agregarlos al mapa
                dataMap.put(entry.getKey(), entry.getValue().getAsString());
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
        return dataMap;
    }
	
	// Método para reemplazar las plantillas "{{clave}}" por los valores del mapa
    private String reemplazarValorClave(String text, Map<String, String> values) {
        for (Map.Entry<String, String> entry : values.entrySet()) {
            String variable = "{{" + entry.getKey() + "}}";
            if (text.contains(variable)) {
                text = text.replace(variable, entry.getValue());
            }
        }
        return text;
    }
    
    public String reemplazarVariablesPlantilla(String jsonFilePath, Map<String, String> dataMapa) throws IOException {
        FileReader reader = new FileReader(jsonFilePath);
        JsonObject jsonObject = new JsonParser().parse(reader).getAsJsonObject();
        // Reemplazar el campo "to" con el valor correspondiente del mapa
        jsonObject.addProperty("to", reemplazarValorClave(jsonObject.get("to").getAsString(), dataMapa));
        // Reemplazar los parámetros en "header"
        JsonArray headerParameters = jsonObject.getAsJsonObject("template").getAsJsonArray("components").get(0).getAsJsonObject().getAsJsonArray("parameters");
        headerParameters.get(0).getAsJsonObject().addProperty("text", reemplazarValorClave(headerParameters.get(0).getAsJsonObject().get("text").getAsString(), dataMapa));
        // Reemplazar los parámetros en "body"
        JsonArray bodyParameters = jsonObject.getAsJsonObject("template").getAsJsonArray("components").get(1).getAsJsonObject().getAsJsonArray("parameters");
        // Reemplazar los valores del body usando el mapa
        for (int i = 0; i < bodyParameters.size(); i++) {
            String currentText = bodyParameters.get(i).getAsJsonObject().get("text").getAsString();
            bodyParameters.get(i).getAsJsonObject().addProperty("text", reemplazarValorClave(currentText, dataMapa));
        }
        // Reemplazar los parámetros en "button"
        JsonArray buttonParameters = jsonObject
            .getAsJsonObject("template").getAsJsonArray("components").get(2).getAsJsonObject().getAsJsonArray("parameters");
        buttonParameters.get(0).getAsJsonObject().addProperty("text", reemplazarValorClave(buttonParameters.get(0).getAsJsonObject().get("text").getAsString(), dataMapa));
        // Convertir el objeto JsonObject de vuelta a String
        return jsonObject.toString();
    }